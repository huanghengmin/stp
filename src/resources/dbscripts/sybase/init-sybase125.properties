#删除序列
drop_sequences=
#查询sequence
query_sequence=
#创建序列
create_sequences=
#创建TODO表
create_temptable=create table schema.temptable (ID numeric(11,0) identity not null primary key,DBNAME varchar(255) not null,TABLENAME varchar(255) not null,PKS varchar(2550) not null,OP varchar(2) not null,OP_TIME date DEFAULT getdate() null)
#查询temptable
query_temptable=select name from dbo.sysobjects where id = object_id(N'schema.tablename')
#删除temptable
drop_temptable=drop table schema.temptable
#查询trigger
query_trigger=select sb.name from sysobjects as sb,sysusers as su  where sb.type='TR' AND sb.name='triggername' and su.uid =sb.uid and su.name='schema'
##插入--pkpatterns(inserted.pkfieldname1,inserted.pkfieldname2)
insert_trigger=CREATE TRIGGER schema.triggername ON schema.table_name FOR INSERT AS begin declare @strVals nvarchar(2550) declare curUpdated  cursor for (select pkpatterns from inserted) open curUpdated fetch curUpdated  into @strVals while @@sqlstatus=0 begin insert into schema.temptable (DBNAME,TABLENAME,PKS,OP) values('schema','table_name','pknames;pktypes;'+@strVals+';','I') fetch curUpdated  into @strVals	end close curUpdated deallocate cursor curUpdated end
#更新--pkpatterns(inserted.pkfieldname1,inserted.pkfieldname2)
update_trigger=CREATE TRIGGER schema.triggername ON schema.table_name FOR UPDATE AS begin declare @strVals nvarchar(2550) declare curUpdated  cursor for (select pkpatterns from inserted) open curUpdated fetch curUpdated  into @strVals while @@sqlstatus=0 begin insert into schema.temptable (DBNAME,TABLENAME,PKS,OP) values('schema','table_name','pknames;pktypes;'+@strVals+';','U') fetch curUpdated  into @strVals	end close curUpdated deallocate cursor curUpdated end
#删除--pkpatterns(deleted.pkfieldname1,deleted.pkfieldname2)
delete_trigger=CREATE TRIGGER schema.triggername ON schema.table_name FOR DELETE AS begin declare @strVals nvarchar(2550) declare curUpdated  cursor for (select pkpatterns from deleted) open curUpdated fetch curUpdated  into @strVals while @@sqlstatus=0 begin insert into schema.temptable (DBNAME,TABLENAME,PKS,OP) values('schema','table_name','pknames;pktypes;'+@strVals+';','D') fetch curUpdated  into @strVals	end close curUpdated deallocate cursor curUpdated end
#删除触发器
drop_trigger=drop trigger schema.triggername