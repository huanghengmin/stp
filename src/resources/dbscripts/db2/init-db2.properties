#删除序列
drop_sequences=
#查询sequence
query_sequence=
#创建序列
create_sequences=
#创建TODO表
create_temptable=CREATE TABLE schema.temptable ( ID DECIMAL  NOT NULL  GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NO CACHE ) , DBNAME VARCHAR (255)  NOT NULL , TABLENAME VARCHAR (255)  NOT NULL , PKS VARCHAR (2550)  NOT NULL , OP VARCHAR (2)  NOT NULL , OP_TIME TIMESTAMP  WITH DEFAULT CURRENT TIMESTAMP )
#查询temptable
query_temptable=select name from sysibm.systables where creator=UPPER('schema') and name = UPPER('tablename')
#删除temptable
drop_temptable=drop table schema.temptable
#查询trigger
query_trigger=select name from sysibm.systriggers where schema = UPPER('tab_schema') and name = UPPER( 'tab_triggername')
##插入 java自动替换.
insert_trigger=CREATE TRIGGER schema.triggername AFTER  INSERT  ON schema.table_name REFERENCING  NEW AS new_row  FOR EACH ROW  MODE DB2SQL BEGIN ATOMIC pkpatterns INSERT INTO schema.temptable (dbname,tablename,pks,op) VALUES ('schema','table_name','pknames;pktypes;'pkvalues';','I');END
#更新
update_trigger=CREATE TRIGGER schema.triggername AFTER  UPDATE  ON schema.table_name REFERENCING  NEW AS new_row  FOR EACH ROW  MODE DB2SQL BEGIN ATOMIC pkpatterns INSERT INTO schema.temptable (dbname,tablename,pks,op) VALUES ('schema','table_name','pknames;pktypes;'pkvalues';','U');END
#删除
delete_trigger=CREATE TRIGGER schema.triggername AFTER  DELETE  ON schema.table_name REFERENCING  OLD AS old_row  FOR EACH ROW  MODE DB2SQL BEGIN ATOMIC pkpatterns INSERT INTO schema.temptable (dbname,tablename,pks,op) VALUES ('schema','table_name','pknames;pktypes;'pkvalues';','D');END
#删除触发器
drop_trigger=drop trigger schema.triggername